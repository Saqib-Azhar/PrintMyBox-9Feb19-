@using System.Text;
@using Practicing_OAuth.Models
@{
    Practicing_OAuth.Models.Practicing_OAuthEntities db = new Practicing_OAuthEntities();

    var categoryTypeList = db.CategoryTypes as IEnumerable<Practicing_OAuth.Models.CategoryType>;
    var categoriesList = db.Categories as IEnumerable<Practicing_OAuth.Models.Category>;
    var productsList = db.Products as IEnumerable<Practicing_OAuth.Models.Product>;
}







<nav class="c-mega-menu c-pull-right c-mega-menu-dark c-mega-menu-dark-mobile c-fonts-uppercase c-fonts-bold">
    <!-- BEGIN: MEGA MENU -->
    <ul class="nav navbar-nav c-theme-nav">
        <!-- <li class="c-active c-menu-type-classic"><a href="#" class="c-link dropdown-toggle">Home</a></li> -->

        @foreach (var categoryType in categoryTypeList)
        {
            <li class="c-menu-type-classic">
                @*<a href="/Products/productsByCategoryType/@categoryType.Id" class="c-link dropdown-toggle">@categoryType.CategoryType1</a>*@
                <a href="#" class="c-link dropdown-toggle">@categoryType.CategoryType1</a>
                <ul class="dropdown-menu c-menu-type-classic c-pull-left">
                    @foreach (var category in categoriesList.Where(s => s.CategoryType.Id == categoryType.Id))
                    {
                        var categoryName = category.CategoryName.Replace(' ', '-');


                        StringBuilder builder = new StringBuilder(categoryName);
                        builder.Replace("-&-", "-And-");
                        categoryName = builder.ToString();
                        <li class="dropdown-submenu">
                            @*<a href="@Url.Action("Category", "Products", new { category= categoryName })">@category.CategoryName</a>*@
                            @Html.ActionLink(category.CategoryName, "Category", "Products", new { category = categoryName }, null)
                            <ul class="dropdown-menu c-pull-right">
                                @foreach (var product in productsList.Where(s => s.Category.Id == category.Id))
                                {
                                    var productSlugCustom = product.SlugURL.Replace('_', '-');
                                    StringBuilder productbuilder = new StringBuilder(productSlugCustom);
                                    productbuilder.Replace("-&-", "-And-");
                                    productSlugCustom = productbuilder.ToString();
                                    <li>
                                        @Html.ActionLink(product.Name, "Item", "Products", new { prodName = productSlugCustom }, null)
                                    </li>
                                }

                            </ul>
                        </li>
                    }

                </ul>
            </li>

        }



        <li class="c-menu-type-classic"><a href="/Products/AllProducts" class="c-link">Products</a></li>
        <li class="c-menu-type-classic"><a href="/PriceQuote/PriceQuoteView" class="c-link">Price Quote</a></li>
        <li class="c-menu-type-classic"><a href="/Blog/BlogView" class="c-link">Blog</a></li>
        <li class="c-menu-type-classic"><a href="/About/AboutView" class="c-link">About Us</a></li>
        <li class="c-menu-type-classic"><a href="/Contact/ContactView" class="c-link">Contact Us</a></li>

        @if (User.Identity.IsAuthenticated)
        {
            <li class="c-menu-type-classic"><a href="/AdminPanel/Panel" class="c-link">Admin</a></li>
        }
        <li class="c-search-toggler-wrapper">
            <a href="#" class="c-btn-icon c-search-toggler"><i class="fa fa-search"></i></a>
        </li>
    </ul>
    <!-- END MEGA MENU -->
</nav>

