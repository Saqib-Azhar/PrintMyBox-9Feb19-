@model IEnumerable<Practicing_OAuth.Models.ProductsReview>
@using System.Text

@{
    ViewBag.Title = "Index";
}


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ReviewerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Review)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayName("Product Name")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    var productSlugCustom = item.Product.SlugURL.Replace('_', '-');
    StringBuilder productbuilder = new StringBuilder(productSlugCustom);
    productbuilder.Replace("-&-", "-And-");
    productSlugCustom = productbuilder.ToString();
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ReviewerName)
        </td>
        <td style="width:350px !important">
            @{
                if (item.Review.Length > 50)
                {
                    item.Review = item.Review.Substring(0, Math.Min(item.Review.Length, 50)) + "...";
                    @Html.DisplayFor(modelItem => item.Review)
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Review)
                }
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rating)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedAt)
        </td>
        <td>
            <a href="@Url.Action("Item", "Products", new { prodName = productSlugCustom })">@Html.DisplayFor(modelItem => item.Product.Name)</a>
</td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
